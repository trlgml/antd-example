{"version":3,"sources":["page/Editor/index.js"],"names":["Editor","useState","BraftEditor","createEditorState","editorState","setEditorState","className","value","excludeControls","onChange","console","log","media","uploadFn","param","xhr","XMLHttpRequest","fd","FormData","errorFn","response","error","msg","upload","addEventListener","event","progress","loaded","total","success","url","JSON","parse","responseText","data","meta","id","Date","loop","autoPlay","controls","append","file","open","send","onSave"],"mappings":"uMA6EeA,UArEA,WAAM,MAEmBC,mBAASC,IAAYC,kBAAkB,KAF1D,mBAEZC,EAFY,KAECC,EAFD,KAwDnB,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CACEC,MAAOH,EACPI,gBAAiB,CAAC,SAClBC,SA1DqB,SAACL,GAC1BM,QAAQC,IAAIP,GACZC,EAAeD,IAyDXQ,MAAO,CAAEC,SAnDE,SAACC,GAEhB,IACMC,EAAM,IAAIC,eACVC,EAAK,IAAIC,SAwBTC,EAAU,SAACC,GAEfN,EAAMO,MAAM,CACVC,IAAK,uBAITP,EAAIQ,OAAOC,iBAAiB,YAZT,SAACC,GAElBX,EAAMY,SAASD,EAAME,OAASF,EAAMG,MAAQ,QAUM,GACpDb,EAAIS,iBAAiB,QA9BH,SAACJ,GAGjBN,EAAMe,QAAQ,CACZC,IAAKC,KAAKC,MAAMjB,EAAIkB,cAAcC,KAAKJ,IACvCK,KAAM,CACJC,IAAK,IAAIC,KAGTC,MAAM,EACNC,UAAU,EACVC,UAAU,QAmBwB,GACxCzB,EAAIS,iBAAiB,QAASL,GAAS,GACvCJ,EAAIS,iBAAiB,QAASL,GAAS,GAEvCF,EAAGwB,OAAO,OAAQ3B,EAAM4B,MACxB3B,EAAI4B,KAAK,OAvCS,sCAuCU,GAC5B5B,EAAI6B,KAAK3B,KAUL4B,OAxDgB","file":"static/js/Editor.e14e0101.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n// 引入编辑器组件\nimport BraftEditor from 'braft-editor'\n// 引入编辑器样式\nimport 'braft-editor/dist/index.css'\n\n\nconst Editor = () => {\n  // \n  const [editorState, setEditorState] = useState(BraftEditor.createEditorState(''))\n  const handleEditorChange = (editorState) => {\n    console.log(editorState);\n    setEditorState(editorState)\n  }\n  const submitContent = () => {\n    // const htmlContent = editorState.toHTML()\n    // const rowContent = editorState.toRAW()\n  }\n  const uploadFn = (param) => {\n\n    const serverURL = 'http://47.117.49.82:3001/v1/upload'\n    const xhr = new XMLHttpRequest()\n    const fd = new FormData()\n\n    const successFn = (response) => {\n      // 假设服务端直接返回文件上传后的地址\n      // 上传成功后调用param.success并传入上传后的文件地址\n      param.success({\n        url: JSON.parse(xhr.responseText).data.url,\n        meta: {\n          id: +new Date(),\n          // title: 'xxx',\n          // alt: 'xxx',\n          loop: true, // 指定音视频是否循环播放\n          autoPlay: true, // 指定音视频是否自动播放\n          controls: true, // 指定音视频是否显示控制栏\n          // poster: 'http://xxx/xx.png', // 指定视频播放器的封面\n        }\n      })\n    }\n\n    const progressFn = (event) => {\n      // 上传进度发生变化时调用param.progress\n      param.progress(event.loaded / event.total * 100)\n    }\n\n    const errorFn = (response) => {\n      // 上传发生错误时调用param.error\n      param.error({\n        msg: 'unable to upload.'\n      })\n    }\n\n    xhr.upload.addEventListener(\"progress\", progressFn, false)\n    xhr.addEventListener(\"load\", successFn, false)\n    xhr.addEventListener(\"error\", errorFn, false)\n    xhr.addEventListener(\"abort\", errorFn, false)\n\n    fd.append('file', param.file)\n    xhr.open('POST', serverURL, true)\n    xhr.send(fd)\n\n  }\n  return (\n    <div className=\"Editor\" >\n      <BraftEditor\n        value={editorState}\n        excludeControls={['emoji']}\n        onChange={handleEditorChange}\n        media={{ uploadFn }}\n        onSave={submitContent}\n      />\n    </div >\n  );\n};\n\nexport default Editor"],"sourceRoot":""}